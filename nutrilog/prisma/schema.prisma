datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user {
    id String @id
    username String
    email String @unique
    password String
    owner_id String
    subscriptions subscription[]
    role role @relation(fields: [role_id], references: [id])
    role_id String
    config config?
    app_config app_config?
    active Boolean
    user_nutrition nutrition[] @relation(name: "user_nutrition")
    admin_nutrition nutrition[] @relation(name: "admin_nutrition")
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model pricing {
    id String @id
    pricing_name String
    duration Int @db.SmallInt
    amount Int @db.SmallInt
    user_id String?
    subscriptions subscription[]
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model subscription {
    id String @id
    payment_date DateTime @db.Timestamp(0)
    valid_to DateTime @db.Timestamp(0)
    active Boolean
    expired Boolean
    pricing pricing  @relation(fields: [pricing_id], references: [id])
    pricing_id String
    user user @relation(fields: [user_id], references: [id])
    user_id  String
    history subscription_history []
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model subscription_history {
    id String @id
    event String
    subscription_id String
    subscription subscription @relation(fields: [subscription_id], references: [id])
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model role {
    id String @id
    type String
    users user[]
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model config {
    id String @id
    language String
    send_notifications Boolean
    send_warnings Boolean
    user user @relation(fields: [user_id], references: [id])
    user_id  String
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model app_config {
    id String @id
    warning_delay Int @db.SmallInt
    notification_delay Int @db.SmallInt
    email_content String
    last_sent_report DateTime @db.Timestamp(0)
    user user @relation(fields: [user_id], references: [id])
    user_id  String
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model nutrition {
    id String @id
    weight Int @db.SmallInt
    height Int @db.SmallInt
    age Int @db.SmallInt
    gender String
    diets diet[]
    user user @relation(name: "user_nutrition", fields: [user_id], references: [id])
    user_id  String
    admin user @relation(name: "admin_nutrition", fields: [admin_id], references: [id])
    admin_id String
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model diet {
    id String @id
    diet_name String
    objective String
    kcal Int @db.SmallInt
    active Boolean
    meals meal[]
    nutrition nutrition @relation(fields: [nutrition_id], references: [id])
    nutrition_id  String
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}


model meal {
    id String @id
    meal_name String
    diet diet @relation(fields: [diet_id], references: [id])
    diet_id  String
    foods meal_food[]
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model food {
    id String @id
    food_name String
    serving_unit Int @db.SmallInt
    qty Int @db.SmallInt
    photo String
    kcal Int @db.SmallInt
    carbohydrates Int @db.SmallInt
    total_fat Int @db.SmallInt
    satured_fat Int @db.SmallInt
    cholesterol Int @db.SmallInt
    sodium Int @db.SmallInt
    protein Int @db.SmallInt
    sugars Int @db.SmallInt
    potasium Int @db.SmallInt
    fiber Int @db.SmallInt
    meals meal_food[]
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}

model meal_food {
    id String @id
    meal_id String
    food_id String
    meal meal @relation(fields: [meal_id], references: [id])
    food food @relation(fields: [food_id], references: [id])
}

model nutritionix_api_metadata {
    id String @id
    admin_id  String
    api_calls Int
    created_at DateTime @db.Timestamp(0)
    updated_at DateTime @db.Timestamp(0)
}
